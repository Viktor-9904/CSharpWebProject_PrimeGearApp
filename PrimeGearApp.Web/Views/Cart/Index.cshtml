@using PrimeGearApp.Web.ViewModels.ShoppingCartViewModels;
@model IEnumerable<ShoppingCartItemViewModel>

@{
    ViewData["Title"] = "Shopping Cart";
}

<h1 class="mt-4 text-center">Your Shopping Cart</h1>

@if (!Model.Any())
{
    <p class="text-center mt-4">Your shopping cart is empty.</p>
}
else
{
    <div class="container mt-4">
        <table class="table table-striped table-hover align-middle">
            <thead class="table-primary">
                <tr>
                    <th scope="col"></th>
                    <th scope="col">Type</th>
                    <th scope="col">Name</th>
                    <th scope="col">Description</th>
                    <th scope="col">Warranty</th>
                    <th scope="col">Quantity</th>
                    <th scope="col" class="text-end">Price</th>
                    <th scope="col" class="text-center"></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td style="width: 10%;">
                            <img src="@item.ImagePath" alt="@item.Name" class="img-fluid rounded" style="max-height: 100px; object-fit: cover;" />
                        </td>

                        <td style="width: 20%;">@item.Type</td>

                        <td style="width: 20%;">@item.Name</td>

                        <td style="width: 30%;" class="text-muted">@item.Description</td>

                        <td style="width: 10%;">@item.WarrantyInMonths months</td>

                        <td style="width: 20%;">
                            <form asp-controller="Cart" asp-action="UpdateQuantity" method="post" class="d-inline">
                                <input type="hidden" name="id" value="@item.Id" />
                                <input type="hidden" id="quantity-@item.Id" name="quantity" value="@item.SelectedQuantity" />
                                <div class="input-group input-group-sm">
                                    <button type="submit" class="btn btn-outline-secondary" onclick="adjustQuantity('@item.Id', -1)">
                                        -
                                    </button>
                                    <span class="form-control text-center">@item.SelectedQuantity</span>
                                    <button type="submit" class="btn btn-outline-secondary" onclick="adjustQuantity('@item.Id', 1)">
                                        +
                                    </button>
                                </div>
                            </form>
                        </td>

                        <td style="width: 10%;" class="text-end fw-bold">@item.ProductPrice.ToString("C")</td>

                        <td style="width: 10%;" class="text-center">
                            <form asp-controller="Cart" asp-action="RemoveFromCart" method="post" class="d-inline">
                                <input type="hidden" name="id" value="@item.Id" />
                                <button type="submit" class="btn p-0 border-0">
                                    <img src="/images/Common/trashIcon.png" alt="Remove" style="width: 20px; height: 20px;" />
                                </button>
                            </form>
                        </td>
                    </tr>
                }
            </tbody>


        </table>

        <div class="text-end mt-4">
            <a asp-controller="Cart" asp-action="Checkout" class="btn btn-success btn-lg px-5">
                Proceed to Checkout
            </a>
        </div>
    </div>
}

<script>
    function adjustQuantity(itemId, delta) {
        var quantityInput = document.getElementById('quantity-' + itemId);
        var currentQuantity = parseInt(quantityInput.value);
        var minQuantity = 1; // Minimum allowed quantity
        var maxQuantity = parseInt(quantityInput.getAttribute('max')) || Infinity; // Maximum if applicable

        var newQuantity = currentQuantity + delta;

        if (newQuantity >= minQuantity && newQuantity <= maxQuantity) {
            quantityInput.value = newQuantity; // Update the hidden input with the new quantity
        } else {
            // Prevent form submission if quantity is invalid
            event.preventDefault();
        }
    }
</script>